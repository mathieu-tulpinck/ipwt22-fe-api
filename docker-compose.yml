version: '3.4'

services:
  wordpress:
    image: wordpress:latest
    ports:
      - 80:80
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: admin
      WORDPRESS_DB_PASSWORD: admin
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - wordpress:/var/www/html
      - ./wordpress/.htaccess:/var/www/html/.htaccess
      - ./wordpress/dev.ini:/usr/local/etc/php/conf.d/dev.ini
      - ./wordpress/wp-config.php:/var/www/html/wp-config.php
      - ./wordpress/rss.php:/var/www/html/wp-content/themes/sydney/plugins/events-manager/templates/rss.php
    networks:
      - frontend
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_DATABASE: wordpress
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - mysql:/var/lib/mysql
    networks:
      - frontend
  phpmyadmin:
    image: phpmyadmin:latest
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: admin
    ports:
      - 8080:80
    networks:
      - frontend
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - 1025:1025
      - 8025:8025
    networks:
      - frontend
  rabbitmq:
    image: rabbitmq:3.9-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    networks:
      - frontend
  httpbin:
    image: kennethreitz/httpbin:latest
    ports:
      - 80
    networks:
     - frontend
    environment:
      - GUNICORN_CMD_ARGS=${GUNICORN_CMD_ARGS}
  frontend.api:
    image: ${DOCKER_REGISTRY-}frontendapi
    build:
      context: .
      dockerfile: FrontEnd.Api/Dockerfile
    networks:
      - frontend
    depends_on:
      - wordpress
      - mysql
      - mailhog
      - rabbitmq

volumes:
  wordpress:
  mysql:
  rabbitmq:
networks:
  frontend:
    driver: bridge
